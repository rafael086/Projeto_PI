//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Projeto_PI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EntidadesProjetoPI : DbContext
    {
        public EntidadesProjetoPI()
            : base("name=EntidadesProjetoPI")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Doadores> Doadores { get; set; }
        public virtual DbSet<Enderecos> Enderecos { get; set; }
        public virtual DbSet<Imagens> Imagens { get; set; }
        public virtual DbSet<Ongs> Ongs { get; set; }
        public virtual DbSet<Projetos> Projetos { get; set; }
        public virtual DbSet<Sobre> Sobre { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<Voluntarios> Voluntarios { get; set; }
    
        public virtual int setOngs(string nome, string email, string senha, string razaoSocial, string cnpj, string telefone, string representante, string cargo, string cep, string numero, string bairro, string rua, string cidade, string estado)
        {
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var senhaParameter = senha != null ?
                new ObjectParameter("senha", senha) :
                new ObjectParameter("senha", typeof(string));
    
            var razaoSocialParameter = razaoSocial != null ?
                new ObjectParameter("razaoSocial", razaoSocial) :
                new ObjectParameter("razaoSocial", typeof(string));
    
            var cnpjParameter = cnpj != null ?
                new ObjectParameter("cnpj", cnpj) :
                new ObjectParameter("cnpj", typeof(string));
    
            var telefoneParameter = telefone != null ?
                new ObjectParameter("telefone", telefone) :
                new ObjectParameter("telefone", typeof(string));
    
            var representanteParameter = representante != null ?
                new ObjectParameter("representante", representante) :
                new ObjectParameter("representante", typeof(string));
    
            var cargoParameter = cargo != null ?
                new ObjectParameter("cargo", cargo) :
                new ObjectParameter("cargo", typeof(string));
    
            var cepParameter = cep != null ?
                new ObjectParameter("cep", cep) :
                new ObjectParameter("cep", typeof(string));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(string));
    
            var bairroParameter = bairro != null ?
                new ObjectParameter("bairro", bairro) :
                new ObjectParameter("bairro", typeof(string));
    
            var ruaParameter = rua != null ?
                new ObjectParameter("rua", rua) :
                new ObjectParameter("rua", typeof(string));
    
            var cidadeParameter = cidade != null ?
                new ObjectParameter("cidade", cidade) :
                new ObjectParameter("cidade", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("setOngs", nomeParameter, emailParameter, senhaParameter, razaoSocialParameter, cnpjParameter, telefoneParameter, representanteParameter, cargoParameter, cepParameter, numeroParameter, bairroParameter, ruaParameter, cidadeParameter, estadoParameter);
        }
    
        public virtual int setDoadores(string nome, string email, string senha, string cpf, string cep, string numero, string bairro, string rua, string cidade, string estado)
        {
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var senhaParameter = senha != null ?
                new ObjectParameter("senha", senha) :
                new ObjectParameter("senha", typeof(string));
    
            var cpfParameter = cpf != null ?
                new ObjectParameter("cpf", cpf) :
                new ObjectParameter("cpf", typeof(string));
    
            var cepParameter = cep != null ?
                new ObjectParameter("cep", cep) :
                new ObjectParameter("cep", typeof(string));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(string));
    
            var bairroParameter = bairro != null ?
                new ObjectParameter("bairro", bairro) :
                new ObjectParameter("bairro", typeof(string));
    
            var ruaParameter = rua != null ?
                new ObjectParameter("rua", rua) :
                new ObjectParameter("rua", typeof(string));
    
            var cidadeParameter = cidade != null ?
                new ObjectParameter("cidade", cidade) :
                new ObjectParameter("cidade", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("setDoadores", nomeParameter, emailParameter, senhaParameter, cpfParameter, cepParameter, numeroParameter, bairroParameter, ruaParameter, cidadeParameter, estadoParameter);
        }
    }
}
